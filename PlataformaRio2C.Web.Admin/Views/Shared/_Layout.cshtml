<!DOCTYPE html>
<html data-ng-app="Rio2CAdmin" lang="pt-BR">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="/favicon.png">

    <title>@ViewBag.Title - Admin Plataforma Rio2C</title>
    <link href="@Html.GetBaseUrl()/Content/assets/font-awesome/css/font-awesome.css" rel="stylesheet" />


    @*<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs/dt-1.10.18/datatables.min.css" />*@
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" />

    @Styles.Render("~/Content/assets/css")
    @Styles.Render("~/Content/css/bundle")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body ng-cloak>
    <!--header start-->

    <header class="header white-bg">
        <div class="sidebar-toggle-box">
            <div data-original-title="Alternar navegação" data-placement="right" class="icon-reorder tooltips"></div>
        </div>
        <!--logo start-->
        @Html.ActionLink("Administração Plataforma Rio2C", "Index", "Home", new { @class = "logo" })
        <!--logo end-->

        <div class="top-nav ">
            <!--search & user info start-->
            @Html.Partial("_LoginPartial")
            <!--search & user info end-->
        </div>
    </header>

    <!--header end-->
    <!--sidebar start-->
    <aside>
        <div id="sidebar" class="nav-collapse " tabindex="5000" style="overflow: hidden; outline: none;">
            @Html.Partial("_MenuSideBar")
        </div>
    </aside>
    <!--sidebar end-->
    <!--main content start-->
    <section id="main-content">
        <section class="wrapper">
            @Html.StatusMessages()
            @RenderBody()


        </section>
    </section>

    <!--main content end-->
    <!--footer start
    <footer class="site-footer">
        <div class="text-center">
            Copyright @DateTime.Now.Year © Plataforma Rio2C.  Desenvolvimento <a href="http://www.marlin.com.br" target="_blank">Marlin</a>.
            <a href="#" class="go-top">
                <i class="icon-angle-up"></i>
            </a>
        </div>
    </footer>
    <!--footer end-->


    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/Content/assets/js")
    @Scripts.Render("~/Content/js/bundle")
    @Scripts.Render("~/Scripts/angular/bundles")
    @Scripts.Render("~/Content/js/Rio2CAdmin/bundles")
    <script src="~/Content/js/Rio2CAdmin/SelectAll.js"></script>

    @RenderSection("scripts", required: false)

    <script type="text/javascript" src="https://cdn.datatables.net/v/bs/dt-1.10.18/datatables.min.js"></script>

    <script>
        function createDatatable(id, url, columns, useDelete) {
            $('#'+id).DataTable({
                    "ajax": {
                        "type": "get",
                        "url": url,
                        "dataSrc": ""
                    },
                    "columns": columns
                });
        }

        $(document).ready(function () {
            $("#CountryId").change(function () {
                var country = $(this).val();
                $("#Address_Country").val(country);

                if (country == 30) {
                    $.ajax({
                        url: "ListStates",
                        type: "post",
                        data: { code: country },
                        dataType: 'json',
                        success: function (r) {

                            var option = "";
                            $(r).each(function (i, el) {
                                option += "<option value='" + el.Id + "'>" + el.StateName + " (" + el.StateCode + ")</option>";
                            });

                            if ($("#StateId option").length >= 1) {
                                $("#StateId option").each(function (i, el) {
                                    if (i >= 1) {
                                        $(this).remove();
                                    }
                                });
                            }

                            $("#StateId").append(option);
                        }
                    });

                    $("#stateBrazil").removeClass("hidden");
                    $("#stateNotBrazil").addClass("hidden");

                    $("#cityBrazil").removeClass("hidden");
                    $("#cityNotBrazil").addClass("hidden");

                    $("#stateNotBrazil").val('');
                } else {
                    $("#stateNotBrazil").removeClass("hidden");
                    $("#stateBrazil").addClass("hidden");

                    $("#cityNotBrazil").removeClass("hidden");
                    $("#cityBrazil").addClass("hidden");

                    $("#CityId").val('0');
                    $("#StateId").val('0');
                }

            })

            $("#StateId").change(function () {
                var state = $(this).val();
                $("#Address_StateId").val(state);

                $.ajax({
                    url: "ListCities",
                    type: "post",
                    dataType: "json",
                    data: { code: state },
                    success: function (r) {
                        console.log(r);


                        var option = "";
                        $(r).each(function (i, el) {
                            option += "<option value='" + el.Id + "'>" + el.Name + "</option>";
                        });


                        if ($("#CityId option").length > 1) {
                            $("#CityId option").each(function (i, el) {
                                if (i >= 1) {
                                    $(this).remove();
                                }
                            });
                        }

                        $("#CityId").append(option);
                    }
                })

                $("#cityBrazil").removeClass("hidden");
                $("#cityNotBrazil").addClass("hidden");

                $("#cityNotBrazil").val('');
            });

            $("#CityId").change(function () {
                var city = $(this).val();
                $("#Address_CityId").val(city);
            });


            if ($("#ExecutiveCollaboratorProducer").length > 0) {
                var columns = [
                    { "data": "name" },
                    { "data": "email" },
                    { "data": "producerName" },
                    { "data": "hasAcceptTerm" },
                    {
                        "data": "creationDate", render: function (data, type, row) {
                            var date = data.split('-');
                            var time = data.split('-')[2].split('T')[1].split('.')[0];

                            var retorno = date[2].split('T')[0] + '/' + date[1] + '/' + date[0] + " " + time;

                            return retorno;
                        }
                    },
                    {
                        data: null, render: function (data, type, row) {
                            // Combine the first and last names into a single table field
                            var editButton = '<a href="@Url.Action("Edit")?uid=' + data.uid + '"> Editar</a>';
                            var deleteButton = '<a data-toggle="modal" href="#modalDelete" data-email="' + data.email + '" data-name="' + data.name + '" data-urltarget="@Url.Action("Delete")?uid=' + data.uid + '"> Excluir </a>';
                            return editButton + ' |' + deleteButton;
                        }
                    }
                ];

                createDatatable('ExecutiveCollaboratorProducer', '/api/collaboratorsproducers', columns)
            } else if ($("#TableProducer").length > 0) {

                var columns = [
                    { "data": "name" },
                    { "data": "cnpj" },
                    {
                        "data": "creationDate", render: function (data, type, row) {
                            var date = data.split('-');
                            var time = data.split('-')[2].split('T')[1].split('.')[0];

                            var retorno = date[2].split('T')[0] + '/' + date[1] + '/' + date[0] + " " + time;

                            return retorno;
                        }
                    },
                    {
                        data: null, render: function (data, type, row) {
                            // Combine the first and last names into a single table field
                            var editButton = '<a href="@Url.Action("Edit")?uid=' + data.uid + '"> Editar</a>';
                            return editButton;
                        }
                    }
                ];

                createDatatable('TableProducer', '/api/producer', columns);

            } else if ($("#TableProject").length > 0) {
                var columns = [
                    { "data": "producerName" },
                    { "data": "id" },
                    { "data": "titlePt" },
                    { "data": "titleEn" },
                    {
                        data: "projectSubmitted", render: function (data, type, row) {
                            if (data == true) {
                                return "SIM";
                            }
                            return "NÃO";
                        }
                    },
                    {
                        data: "pitching", render: function (data, type, row) {
                            if (data == true) {
                                return "SIM";
                            }
                            return "NÃO";
                        }
                    },
                    {
                        data: "RelatedPlayers", render: function (data, type, row) {
                            if (data ==null) {
                                return 0;
                            }
                            return data.length;
                        }
                    },
                    { "data": "numberOfEvaluations" },
                    {
                        "data": "creationDate", render: function (data, type, row) {
                            var date = data.split('-');
                            var time = data.split('-')[2].split('T')[1].split('.')[0];

                            var retorno = date[2].split('T')[0] + '/' + date[1] + '/' + date[0] + " " + time;

                            return retorno;
                        }
                    },
                    {
                        data: null, render: function (data, type, row) {
                            // Combine the first and last names into a single table field
                            var editButton = '<a href="@Url.Action("Edit")?uid=' + data.uid + '"> Editar</a>';
                            return editButton;
                        }
                    }
                ];

                createDatatable('TableProject', '/api/project', columns);
            }  else if ($("#ExecutiveCollaboratorPlayer").length > 0) {
                var columns = [
                    { "data": "name" },
                    { "data": "email" },
                    { "data": "holdingsName" },
                    { "data": "playersName" },
                    {
                        "data": "creationDate", render: function (data, type, row) {
                            var date = data.split('-');
                            var time = data.split('-')[2].split('T')[1].split('.')[0];

                            var retorno = date[2].split('T')[0] + '/' + date[1] + '/' + date[0] + " " + time;

                            return retorno;
                        }
                    },
                    {
                        data: null, render: function (data, type, row) {
                            // Combine the first and last names into a single table field
                            var editButton = '<a href="@Url.Action("Edit")?uid=' + data.uid + '"> Editar</a>';
                            var deleteButton = '<a data-toggle="modal" href="#modalDelete" data-email="' + data.email + '" data-name="' + data.name + '" data-urltarget="@Url.Action("Delete")?uid=' + data.uid + '"> Excluir </a>';
                            return editButton + ' |' + deleteButton;
                        }
                    }
                ];

                createDatatable('ExecutiveCollaboratorPlayer', '/api/collaboratorsplayers', columns)
            } else if ($("#TablePlayer").length > 0) {
                var columns = [
                    { "data": "name" },
                    { "data": "holdingName" },
                    { "data": "cnpj" },
                    { "data": "website" },
                    { "data": "phoneNumber" },
                    {
                        "data": "creationDate", render: function (data, type, row) {
                            var date = data.split('-');
                            var time = data.split('-')[2].split('T')[1].split('.')[0];

                            var retorno = date[2].split('T')[0] + '/' + date[1] + '/' + date[0] + " " + time;

                            return retorno;
                        }
                    },
                    {
                        data: null, render: function (data, type, row) {
                            // Combine the first and last names into a single table field
                            var editButton = '<a href="@Url.Action("Edit")?uid=' + data.uid + '"> Editar</a>';

                            var playersButton = '<a href="@Url.Action("EditInterests")?uid=' + data.uid + '"> Interesses</a>';

                            var deleteButton = '<a data-toggle="modal" href="#modalDelete" data-email="' + data.email + '" data-name="' + data.name + '" data-urltarget="@Url.Action("Delete")?uid=' + data.uid + '"> Excluir </a>';
                            return editButton + '|' + playersButton + ' |' + deleteButton;
                        }
                    }
                ];

                createDatatable('TablePlayer', '/api/players', columns)
            }
            else if ($("#TableHolding").length > 0) {
                var columns = [
                    { "data": "name" },
                    {
                        "data": "creationDate", render: function (data, type, row) {
                            var date = data.split('-');
                            var time = data.split('-')[2].split('T')[1].split('.')[0];

                            var retorno = date[2].split('T')[0] + '/' + date[1] + '/' + date[0] + " " + time;

                            return retorno;
                        }
                    },
                    {
                        data: null, render: function (data, type, row) {
                            // Combine the first and last names into a single table field
                            var editButton = '<a href="@Url.Action("Edit")?uid=' + data.uid + '"> Editar</a>';
                            //var deleteButton = '<a data-toggle="modal" href="#modalDelete" data-email="' + data.email + '" data-name="' + data.name + '" data-urltarget="@Url.Action("Delete")?uid=' + data.uid + '"> Excluir </a>';
                            //return editButton + '|' + playersButton + ' |' + deleteButton;

                            return editButton;
                        }
                    }
                ];

                createDatatable('TableHolding', '/api/holdings', columns)
            }
            else if ($("#TableLogistics").length > 0) {
                var columns = [
                    { "data": "collaborator" },
                    { "data": "arrivalDate" },
                    { "data": "arrivalTimeText" },
                    { "data": "departureDate" },
                    { "data": "departureTimeText" },
                    {
                        data: null, render: function (data, type, row) {
                            // Combine the first and last names into a single table field
                            var editButton = '<a href="@Url.Action("Edit")?uid=' + data.uid + '"> Editar</a>';
                            var deleteButton = '<a data-toggle="modal" href="#modalDelete" data-email="' + data.email + '" data-name="' + data.name + '" data-urltarget="@Url.Action("Delete")?uid=' + data.uid + '"> Excluir </a>';

                            return editButton + ' | ' + deleteButton;
                        }
                    }
                ];
                createDatatable('TableLogistics', '/api/logistics', columns)
            }else if($("#TableSpeaker").length > 0) {
                var columns = [
                    { "data": "name" },
                    { "data": "email" },
                    { "data": "phoneNumber" },
                    { "data": "cellPhone" },
                    {
                        "data": "creationDate", render: function (data, type, row) {
                            var date = data.split('-');
                            var time = data.split('-')[2].split('T')[1].split('.')[0];

                            var retorno = date[2].split('T')[0] + '/' + date[1] + '/' + date[0] + " " + time;

                            return retorno;
                        }
                    },
                    {
                        data: null, render: function (data, type, row) {
                            // Combine the first and last names into a single table field
                            var editButton = '<a href="@Url.Action("Edit")?uid=' + data.uid + '"> Editar</a>';
                            var deleteButton = '<a data-toggle="modal" href="#modalDelete" data-email="' + data.email + '" data-name="' + data.name + '" data-urltarget="@Url.Action("Delete")?uid=' + data.uid + '"> Excluir </a>';

                            return editButton + ' | ' + deleteButton;
                        }
                    }
                ];
                createDatatable('TableSpeaker', '/api/collaborator/speaker', columns)
            } else if($("#TableMusicalCommission").length > 0) {
                var columns = [
                    { "data": "name" },
                    { "data": "email" },
                    { "data": "phoneNumber" },
                    { "data": "cellPhone" },
                    {
                        "data": "creationDate", render: function (data, type, row) {
                            var date = data.split('-');
                            var time = data.split('-')[2].split('T')[1].split('.')[0];

                            var retorno = date[2].split('T')[0] + '/' + date[1] + '/' + date[0] + " " + time;

                            return retorno;
                        }
                    },
                    {
                        data: null, render: function (data, type, row) {
                            // Combine the first and last names into a single table field
                            var editButton = '<a href="@Url.Action("Edit")?uid=' + data.uid + '"> Editar</a>';
                            var deleteButton = '<a data-toggle="modal" href="#modalDelete" data-email="' + data.email + '" data-name="' + data.name + '" data-urltarget="@Url.Action("Delete")?uid=' + data.uid + '"> Excluir </a>';

                            return editButton + ' | ' + deleteButton;
                        }
                    }
                ];
                createDatatable('TableMusicalCommission', '/api/collaborator/MusicalCommission', columns)
            } else if ($("#TableProjectPitching").length > 0) {
                var columns = [
                    { "data": "producerName" },
                    { "data": "id" },
                    { "data": "titlePt" },
                    { "data": "titleEn" },
                    {
                        data: "projectSubmitted", render: function (data, type, row) {
                            if (data == true) {
                                return "SIM";
                            }
                            return "NÃO";
                        }
                    },                    
                    {
                        data: "RelatedPlayers", render: function (data, type, row) {
                            if (data ==null) {
                                return 0;
                            }
                            return data.length;
                        }
                    },
                    { "data": "numberOfEvaluations" },
                    {
                        "data": "creationDate", render: function (data, type, row) {
                            var date = data.split('-');
                            var time = data.split('-')[2].split('T')[1].split('.')[0];

                            var retorno = date[2].split('T')[0] + '/' + date[1] + '/' + date[0] + " " + time;

                            return retorno;
                        }
                    },
                    {
                        data: null, render: function (data, type, row) {
                            // Combine the first and last names into a single table field
                            var editButton = '<a href="@Url.Action("ProjectPitchingEdit")?uid=' + data.uid + '"> Visualizar</a>';
                            return editButton;
                        }
                    }
                ];

                createDatatable('TableProjectPitching', '/api/project/ProjectPitching', columns);
            }
        });
    </script>

</body>
</html>