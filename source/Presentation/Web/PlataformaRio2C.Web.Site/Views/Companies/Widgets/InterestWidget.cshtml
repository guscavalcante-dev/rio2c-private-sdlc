@using PlataformaRio2C.Domain.Dtos
@using PlataformaRio2C.Domain.Entities
@model AttendeeOrganizationSiteInterestWidgetDto
@{
    var userAccessControlDto = ViewBag.UserAccessControlDto as UserAccessControlDto;
    var isCollaborator = userAccessControlDto?.HasEditionAttendeeOrganization(Model.AttendeeOrganization.Uid) == true;
    var groupedInterests = ViewBag.GroupedInterests as List<IGrouping<InterestGroup, Interest>>;
}
<div class="kt-portlet__head">
    <div class="kt-portlet__head-label">
        <h3 class="kt-portlet__head-title">
            @Labels.Interests
        </h3>
    </div>
    @if (isCollaborator)
    {
        <div class="kt-portlet__head-toolbar">
            <div class="kt-portlet__head-actions">
                <a class="btn btn-clean btn-sm btn-icon btn-icon-md btn-circle" onclick="return false;" data-toggle="kt-tooltip" title="" data-placement="right" data-original-title="@Labels.ComingSoon...">
                    <i class="flaticon2-edit"></i>
                </a>
            </div>
        </div>
    }
</div>
<div class="kt-portlet__body">
    <div class="kt-widget kt-widget--user-profile-3">
        <div class="kt-widget__top">
            <div class="kt-widget__content p-0">
                <div class="kt-widget__head">
                    <h3 class="kt-heading kt-heading--sm mt-2 mb-2">@Messages.RestrictionSpecifics</h3>
                </div>
                <div class="kt-widget__info mt-2">
                    @{
                        var restrictionSpecific = Model.GetRestrictionSpecificDtoByLanguageCode(ViewBag.UserInterfaceLanguage);
                    }
                    @if (restrictionSpecific != null)
                    {
                        <div class="kt-widget__desc">
                            @Html.Raw(restrictionSpecific.Value)
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="kt-widget__bottom mt-2">
            @if (groupedInterests?.Any() == true)
            {
                <div class="row">
                    @foreach (var interests in groupedInterests)
                    {
                        <div class="col-md-6 mt-5">
                            <div class="kt-widget4">
                                <h3 class="kt-heading kt-heading--sm mt-2 mb-2">@interests.Key.Name.GetSeparatorTranslation(ViewBag.UserInterfaceLanguage as string, '|')</h3>
                                @foreach (var interest in interests?.OrderBy(ig => ig.DisplayOrder))
                                {
                                    var organizationInterestDto = Model.GetOrganizationInterestDtoByInterestUid(interest.Uid);
                                    <div class="kt-widget4__item pt-2 pb-2 mr-3">
                                        @if (organizationInterestDto != null)
                                        {
                                            <div class="kt-widget4__pic kt-font-success">
                                                <i class="la la-check"></i>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="kt-widget4__pic kt-font-danger">
                                                <i class="la la-close"></i>
                                            </div>
                                        }
                                        <div class="kt-widget4__info">
                                            <span class="kt-widget4__title">@interest.Name.GetSeparatorTranslation(ViewBag.UserInterfaceLanguage as string, '|')</span>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <span class="text-center">@string.Format(Messages.EntityNotAction, Labels.Interests, Labels.FoundF)</span>
            }
        </div>
    </div>
</div>