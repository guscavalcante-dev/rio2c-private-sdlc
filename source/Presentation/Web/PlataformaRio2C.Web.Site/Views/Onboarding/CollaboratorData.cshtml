@using PlataformaRio2C.Domain.Dtos
@model PlataformaRio2C.Application.CQRS.Commands.OnboardCollaboratorData
@{
    Layout = "~/Views/Themes/Metronic/_Internal.cshtml";
    ViewBag.Title = string.Format(Labels.Welcome, (ViewBag.EditionDto as EditionDto)?.UrlCode);
    var userAccessControlDto = ViewBag.UserAccessControlDto as UserAccessControlDto;
    var isPlayer = ViewBag.IsPlayer as bool?;
    var isExecutive = userAccessControlDto?.HasAnyCollaboratorType(PlataformaRio2C.Domain.Constants.CollaboratorType.Executives) == true;
    var isIndustry = userAccessControlDto?.HasCollaboratorType(PlataformaRio2C.Domain.Constants.CollaboratorType.Industry) == true;
}
<div class="kt-portlet">
    <div class="kt-portlet__body kt-portlet__body--fit">
        <div class="kt-grid  kt-wizard-v2 kt-wizard-v2--white" id="kt_wizard_v2" data-ktwizard-state="first">
            <div class="kt-grid__item kt-wizard-v2__aside">
                <!--begin: Form Wizard Nav -->
                @Html.Partial("Shared/_OnboardingMenu", 2 + (isPlayer == true ? 1 : 0))
                <!--end: Form Wizard Nav -->
            </div>
            <div class="kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper">
                @using (Html.BeginForm("CollaboratorData", "Onboarding", FormMethod.Post, new { enctype = "multipart/form-data", id = "CollaboratorDataForm", @class = "kt-form" }))
                {
                    <!--begin: Form Wizard Step 1-->
                    <div class="kt-wizard-v2__content" data-ktwizard-type="step-content" data-ktwizard-state="current">
                        <div class="kt-heading kt-heading--md">@Labels.PersonalInformation</div>
                        <div class="kt-form__section kt-form__section--first">
                            <div class="kt-wizard-v2__form">
                                <div id="form-container">
                                    <div class="row">
                                        <div class="form-group col-lg-5 col-xl-3">
                                            @Html.EditorFor(m => m.CropperImage)
                                        </div>
                                        <div class="form-group col-lg-7 col-xl-9 pl-lg-5">
                                            <div class="kt-section">
                                                <h3 class="kt-section__title mb-0">@Labels.JobTitle</h3>
                                                @Html.ValidationMessage("JobTitles", new { @class = "text-danger" })
                                                <div class="kt-section__content mt-3">
                                                    @Html.EditorFor(m => m.JobTitles, new { id = "vasco"})
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                                                        
                                    <div class="kt-section">                                        
                                        <div class="kt-section__content mt-3">                                    
                                            @Html.LabelFor(m => m.CollaboratorIndustryUid, new { @class = "control-label" })                                            
                                            <select name="CollaboratorIndustryUid" id="CollaboratorIndustryUid" class="form-control enable-select2" @Html.GetUnobtrusiveValidationAttributesFor(m => m.CollaboratorIndustryUid)>
                                                <option value="">@($"{Labels.Choose}...")</option>
                                                @if (Model.CollaboratorIndustries != null)
                                                {
                                                    foreach (var industry in Model.CollaboratorIndustries)
                                                    {
                                                        <option value="@industry.Uid" @(Model.CollaboratorIndustryUid == industry.Uid ? "selected" : "") data-aditionalinfo="@industry.HasAdditionalInfo">
                                                            @industry.Name
                                                        </option>
                                                    }
                                                }
                                            </select>                                            
                                            @Html.ValidationMessageFor(m => m.CollaboratorIndustryUid, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="kt-section d-none" data-additionalinfo="CollaboratorIndustryUid">
                                        <div class="kt-section__content mt-3">
                                            @Html.LabelFor(m => m.CollaboratorIndustryAdditionalInfo, new { @class = "control-label" })
                                            @Html.TextBoxFor(m => m.CollaboratorIndustryAdditionalInfo, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.CollaboratorIndustryAdditionalInfo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                                               
                                    <div class="kt-section">                                        
                                        <div class="kt-section__content mt-3">                                    
                                            @Html.LabelFor(m => m.CollaboratorRoleUid, new { @class = "control-label" })
                                            <select name="CollaboratorRoleUid" id="CollaboratorRoleUid" class="form-control enable-select2" @Html.GetUnobtrusiveValidationAttributesFor(m => m.CollaboratorRoleUid)>
                                                <option value="">@($"{Labels.Choose}...")</option>
                                                @if (Model.CollaboratorRoles != null)
                                                {
                                                    foreach (var role in Model.CollaboratorRoles)
                                                    {
                                                        <option value="@role.Uid" @(Model.CollaboratorRoleUid == role.Uid ? "selected" : "") data-aditionalinfo="@role.HasAdditionalInfo">
                                                            @role.Name
                                                        </option>
                                                    }
                                                }
                                            </select>                                            
                                            @Html.ValidationMessageFor(m => m.CollaboratorRoleUid, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="kt-section d-none" data-additionalinfo="CollaboratorRoleUid">
                                        <div class="kt-section__content mt-3">
                                            @Html.LabelFor(m => m.CollaboratorRoleAdditionalInfo, new { @class = "control-label" })
                                            @Html.TextBoxFor(m => m.CollaboratorRoleAdditionalInfo, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.CollaboratorRoleAdditionalInfo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="kt-section">
                                        <div class="kt-section__content mt-3">
                                            @Html.LabelFor(m => m.BirthDate, new { @class = "control-label" })
                                            @Html.TextBox("BirthDate", Model.BirthDate?.ToShortDateString(), new { @class = "form-control enable-datepicker", @readonly="readonly" })
                                            @Html.ValidationMessageFor(m => m.BirthDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="kt-section">                                        
                                        <div class="kt-section__content mt-3">                                    
                                            @Html.LabelFor(m => m.CollaboratorGenderUid, new { @class = "control-label" })
                                            <select name="CollaboratorGenderUid" id="CollaboratorGenderUid" class="form-control enable-select2" @Html.GetUnobtrusiveValidationAttributesFor(m => m.CollaboratorGenderUid)>
                                                <option value="">@($"{Labels.Choose}...")</option>
                                                @if (Model.CollaboratorGenders != null)
                                                {
                                                    foreach (var gender in Model.CollaboratorGenders)
                                                    {
                                                        <option value="@gender.Uid" @(Model.CollaboratorGenderUid == gender.Uid ? "selected" : "") data-aditionalinfo="@gender.HasAdditionalInfo">
                                                            @gender.Name
                                                        </option>
                                                    }
                                                }
                                            </select>                                            
                                            @Html.ValidationMessageFor(m => m.CollaboratorGenderUid, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="kt-section d-none" data-additionalinfo="CollaboratorGenderUid">
                                        <div class="kt-section__content mt-3">
                                            @Html.LabelFor(m => m.CollaboratorGenderAdditionalInfo, new { @class = "control-label" })
                                            @Html.TextBoxFor(m => m.CollaboratorGenderAdditionalInfo, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.CollaboratorGenderAdditionalInfo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    
                                    <div class="form-group">
						                <div class="kt-checkbox-inline">
							                <label class="kt-checkbox">
								                <input type="checkbox" name="HasAnySpecialNeeds" id="HasAnySpecialNeeds" value="true" @if(Model.HasAnySpecialNeeds ?? false) { <text>checked</text> }> @Labels.HasAnySpecialNeeds
                                                <input type="hidden" value="false" name="HasAnySpecialNeeds" />
								                <span></span>
							                </label>
						                </div>
						                <span class="form-text text-muted">Some help text goes here</span>
                                            @Html.ValidationMessageFor(m => m.HasAnySpecialNeeds, "", new { @class = "text-danger" })
					                </div>

                                    <div class="kt-section d-none" data-additionalinfo="HasAnySpecialNeeds">
                                        <div class="kt-section__content mt-3">
                                            @Html.LabelFor(m => m.SpecialNeedsDescription, new { @class = "control-label" })
                                            @Html.TextBoxFor(m => m.SpecialNeedsDescription, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.SpecialNeedsDescription, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="kt-section">
                                        <h3 class="kt-heading kt-heading--md">@Messages.DescribeYourMiniBiography</h3>
                                        @Html.ValidationMessage("MiniBios", new { @class = "text-danger" })
                                        <div class="kt-section__content mt-3">
                                            @Html.EditorFor(m => m.MiniBios)
                                        </div>
                                    </div>                                    

                                    @if (isExecutive || isIndustry)
                                    {
                                        <div class="row">
                                            <div class="form-group col-md-12">
                                                @Html.LabelFor(m => m.PublicEmail, Messages.PublicEmail, new { @class = "control-label" })
                                                <div class="kt-radio-inline">
                                                    <label class="kt-radio">
                                                        @Html.RadioButtonFor(m => m.SharePublicEmail, true) @Labels.Yes
                                                        <span></span>
                                                    </label>
                                                    <label class="kt-radio">
                                                        @Html.RadioButtonFor(m => m.SharePublicEmail, false) @Labels.No
                                                        <span></span>
                                                    </label>
                                                </div>
                                                @Html.ValidationMessageFor(m => m.SharePublicEmail, "", new { @class = "text-danger" })
                                                @Html.TextBoxFor(m => m.PublicEmail, Model.SharePublicEmail == true ? (object)new { @class = "form-control" } : (object)new { @class = "form-control", disabled = "" })
                                                @Html.ValidationMessageFor(m => m.PublicEmail, "", new { @class = "text-danger" })
                                            </div>
                                        </div>        
                                    }
                                    <div class="kt-section">
                                        <h3 class="kt-heading kt-heading--md">@Labels.SocialNetworks</h3>
                                        <div class="kt-section__content mt-3">
                                            <div class="row">
                                                <div class="form-group col-xl-6">
                                                    @Html.LabelFor(m => m.Website, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
                                                    @Html.TextBoxFor(m => m.Website, new { @class = "form-control" }) 
                                                    <span class="form-text text-muted">@Messages.WebsiteUrl</span>
                                                    <span class="form-text text-muted">@Labels.Eg: site.com @Labels.Or www.site.com</span>
                                                    @Html.ValidationMessageFor(m => m.Website, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="form-group col-xl-6">
                                                    @Html.LabelFor(m => m.Linkedin, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
                                                    @Html.TextBoxFor(m => m.Linkedin, new { @class = "form-control" })
                                                    <span class="form-text text-muted">@Messages.LinkedinUser</span>
                                                    <span class="form-text text-muted">@Labels.Eg: https://www.linkedin.com/in/<span style="background: #e0e0e0;">abcdefg</span> @Labels.Is <span style="background: #e0e0e0;">abcdefg</span></span>
                                                    @Html.ValidationMessageFor(m => m.Linkedin, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group col-xl-6">
                                                    @Html.LabelFor(m => m.Twitter, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
                                                    @Html.TextBoxFor(m => m.Twitter, new { @class = "form-control" })
                                                    <span class="form-text text-muted">@Messages.TwitterUser</span>
                                                    <span class="form-text text-muted">@Labels.Eg: https://twitter.com/<span style="background: #e0e0e0;">abcdefg</span> @Labels.Is <span style="background: #e0e0e0;">abcdefg</span></span>
                                                    @Html.ValidationMessageFor(m => m.Twitter, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="form-group col-xl-6">
                                                    @Html.LabelFor(m => m.Instagram, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
                                                    @Html.TextBoxFor(m => m.Instagram, new { @class = "form-control" })
                                                    <span class="form-text text-muted">@Messages.InstagramUser</span>
                                                    <span class="form-text text-muted">@Labels.Eg: https://www.instagram.com/<span style="background: #e0e0e0;">abcdefg</span> @Labels.Is <span style="background: #e0e0e0;">abcdefg</span>.</span>
                                                    @Html.ValidationMessageFor(m => m.Instagram, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group col-xl-6">
                                                    @Html.LabelFor(m => m.Youtube, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
                                                    @Html.TextBoxFor(m => m.Youtube, new { @class = "form-control" })
                                                    <span class="form-text text-muted">@Messages.YoutubeUrl</span>
                                                    <span class="form-text text-muted">@Labels.Eg: youtube.com/channel/abcdefg </span>
                                                    @Html.ValidationMessageFor(m => m.Youtube, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--end: Form Wizard Step 1-->
                    <!--begin: Form Actions -->
                    <div class="kt-form__actions">
                        <button type="button" class="btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u ml-auto" onclick="MyRio2cCommon.submitForm('#CollaboratorDataForm');">
                            @Labels.NextStep
                        </button>
                    </div>
                    <!--end: Form Actions -->
                }
                <!--end: Form Wizard Form-->
            </div>
        </div>
    </div>
</div>
@section Styles {
    
    @Styles.Render("~/bundles/css/cropper.css")
    @Styles.Render("~/bundles/css/select2.css")
    @Styles.Render("~/bundles/css/bootstrap-datepicker.css")
    @Styles.Render("~/bundles/css/onboardingIndex")
}
@section Scripts {
    @Scripts.Render("~/bundles/js/cropper.js")
    @Scripts.Render("~/bundles/js/select2.js")
    @Scripts.Render("~/bundles/js/bootstrap-datepicker.js")
    @Scripts.Render("~/bundles/js/addresses.form.js")
    @Scripts.Render("~/bundles/js/onboarding.collaboratordata.js")
    <script>
        jQuery(document).ready(function () {
            OnboardingCollaboratorData.init();
        });
    </script>
}