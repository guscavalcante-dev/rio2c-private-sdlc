@using System.Globalization
@using PlataformaRio2C.Domain.Dtos
@using PlataformaRio2C.Domain.Entities
@model PlataformaRio2C.Application.CQRS.Commands.OnboardOrganizationData
@{
    Layout = "~/Views/Themes/Metronic/_Internal.cshtml";
    ViewBag.Title = Labels.Welcome;

    var userAccessControlDto = ViewBag.UserAccessControlDto as UserAccessControlDto;
    var playerAttendeeOrganizations = ViewBag.PlayerAttendeeOrganizations as List<AttendeeOrganization>;
    var isPlayer = ViewBag.IsPlayer as bool?;
    var player = playerAttendeeOrganizations?.FirstOrDefault(pao => pao.Organization.Uid == Model.OrganizationUid)?.Organization;
    var initialPlayerIndex = 3 + (isPlayer == true ? 1 : 0);
    var playerIndex = playerAttendeeOrganizations?.FindIndex(pao => pao.Organization.Uid == Model.OrganizationUid) ?? 0;
    var additionIndex = playerIndex == 0 ? 0 : 1;
}
<div class="kt-portlet">
    <div class="kt-portlet__body kt-portlet__body--fit">
        <div class="kt-grid  kt-wizard-v2 kt-wizard-v2--white" id="kt_wizard_v2" data-ktwizard-state="first">
            <div class="kt-grid__item kt-wizard-v2__aside">
                <!--begin: Form Wizard Nav -->
                @Html.Partial("Shared/_OnboardingMenu", playerIndex + initialPlayerIndex + additionIndex)
                <!--end: Form Wizard Nav -->
            </div>
            <div class="kt-grid__item kt-grid__item--fluid kt-wizard-v2__wrapper">
                @using (Html.BeginForm("PlayerInfo", "Onboarding", FormMethod.Post, new { enctype = "multipart/form-data", id = "OrganizationDataForm", @class = "kt-form", novalidate = "novalidate" }))
                {
                    @Html.HiddenFor(m => m.OrganizationUid)
                    <!--begin: Form Wizard Step 1-->
                    <div class="kt-wizard-v2__content" data-ktwizard-type="step-content" data-ktwizard-state="current">
                        <div class="kt-heading kt-heading--md">@string.Format(Messages.PlayerInfoFor, player?.Name ?? string.Empty)</div>
                        <div class="kt-form__section kt-form__section--first">
                            <div class="kt-wizard-v2__form">
                                <div id="form-container">
                                    <div class="row">
                                        <div class="form-group col-lg-4 text-center">
                                            @Html.EditorFor(m => m.CropperImage)
                                        </div>
                                        <div class="col-lg-8">
                                            <div class="row">
                                                <div class="form-group col-md-12">
                                                    @Html.LabelFor(m => m.CompanyName, new { @class = "control-label" })
                                                    @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.CompanyName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group col-md-12">
                                                    @Html.LabelFor(m => m.TradeName, new { @class = "control-label" })
                                                    @Html.TextBoxFor(m => m.TradeName, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.TradeName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="form-group col-md-6" data-id="Country">
                                                    @Html.LabelFor(m => m.CountryUid, new { @class = "control-label" })
                                                    @Html.HiddenFor(m => m.IsCompanyNumberRequired)
                                                    <select name="@Html.NameFor(m => m.CountryUid)" id="@Html.IdFor(m => m.CountryUid)" @Html.GetUnobtrusiveValidationAttributesFor(m => m.CountryUid) class="form-control">
                                                        <option value="" data-country-code="" data-companynumber-required="" data-companynumber-mask="" data-zipcode-mask="" data-phonenumber-mask="" data-mobile-mask="">@(Labels.Select)...</option>
                                                        @foreach (var countryBaseDto in Model.CountriesBaseDtos)
                                                        {
                                                            <option value="@countryBaseDto.Uid" @(countryBaseDto.Uid == Model.CountryUid ? "selected" : "") data-country-code="@countryBaseDto.Code" data-companynumber-required="@countryBaseDto.IsCompanyNumberRequired" data-companynumber-mask="@countryBaseDto.CompanyNumberMask" data-zipcode-mask="@countryBaseDto.ZipCodeMask" data-phonenumber-mask="@countryBaseDto.PhoneNumberMask" data-mobile-mask="@countryBaseDto.MobileMask">
                                                                @countryBaseDto.DisplayName
                                                            </option>
                                                        }
                                                    </select>
                                                    @Html.ValidationMessageFor(m => m.CountryUid, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="form-group col-md-6">
                                                    @Html.LabelFor(m => m.Document, new { @class = "control-label" })
                                                    @Html.TextBoxFor(m => m.Document, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.Document, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-md-12">
                                            @Html.LabelFor(m => m.Website, new { @class = "control-label" })
                                            @Html.TextBoxFor(m => m.Website, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.Website, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-md-12">
                                            @Html.LabelFor(m => m.SocialMedia, new { @class = "control-label" })
                                            @Html.TextBoxFor(m => m.SocialMedia, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.SocialMedia, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="kt-section mt-30">
                                        <h3 class="kt-heading kt-heading--md">@Labels.Address</h3>
                                        <div class="kt-section__content mt-3">
                                            @Html.EditorFor(m => m.Address)
                                        </div>
                                    </div>
                                    <div class="kt-section mt-30">
                                        <h3 class="kt-heading kt-heading--md">@Labels.CompanyResume</h3>
                                        @Html.ValidationMessage("Descriptions", new { @class = "text-danger" })
                                        <div class="kt-section__content mt-3">
                                            @Html.EditorFor(m => m.Descriptions)
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-md-6">
                                            <div class="kt-section">
                                                <h3 class="kt-heading kt-heading--md">@Labels.Activity</h3>
                                                @Html.ValidationMessage("OrganizationActivities", new { @class = "text-danger OrganizationActivities" })
                                                <div class="error">
                                                    <span></span>
                                                </div>
                                                <div class="kt-section__content mt-3">
                                                    <div class="kt-checkbox-list">
                                                        @Html.EditorFor(m => m.OrganizationActivities)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <div class="kt-section">
                                                <h3 class="kt-heading kt-heading--md">@Labels.TargetAudience</h3>
                                                @Html.ValidationMessage("TargetAudiencesUids", new { @class = "text-danger" })
                                                <div class="kt-section__content mt-3">
                                                    <div class="kt-checkbox-list">
                                                        @foreach (var targetAudience in Model.TargetAudiences)
                                                        {
                                                            <label class="kt-checkbox">
                                                                <input type="checkbox"
                                                                       name="TargetAudiencesUids"
                                                                       value="@targetAudience.Uid"
                                                                       class="require-one"
                                                                       data-id="targetaudience-group"
                                                                       @if (Model.TargetAudiencesUids?.Contains(targetAudience.Uid) == true) { <text> checked </text>  } /> @targetAudience.Name.GetSeparatorTranslation(CultureInfo.CurrentCulture.ToString(), '|')
                                                                <span></span>
                                                            </label>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--end: Form Wizard Step 1-->
                    <!--begin: Form Actions -->
                    <div class="kt-form__actions">
                        @if (userAccessControlDto?.IsAttendeeCollaboratorOnboardingFinished() == false || userAccessControlDto?.IsAttendeeOrganizationsOnboardingFinished() == false)
                        {
                            <button type="button" class="btn btn-brand btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u ml-auto" onclick="OnboardWizard.submit('#OrganizationDataForm');">
                                @Labels.NextStep
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-success btn-md btn-tall btn-wide kt-font-bold kt-font-transform-u ml-auto">
                                @Labels.Save
                            </button>
                        }
                    </div>
                    <!--end: Form Actions -->
                }
                <!--end: Form Wizard Form-->
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/bundles/css/cropper.css")
    @Styles.Render("~/bundles/css/select2.css")
    @Styles.Render("~/bundles/css/onboardingIndex")
}
@section Scripts {
    @Scripts.Render("~/bundles/js/jqueryval.js")
    @Scripts.Render("~/bundles/js/cropper.js")
    @Scripts.Render("~/bundles/js/select2.js")
    @Scripts.Render("~/bundles/js/ckEditor.js")
    @Scripts.Render("~/bundles/js/inputmask.js")
    @Scripts.Render("~/bundles/js/addresses.form.js")
    @Scripts.Render("~/bundles/js/onboarding.organizationdata.js")
    @Scripts.Render("~/bundles/js/onboarding.wizard.js")
    <script>
        jQuery(document).ready(function () {
            OnboardingOrganizationData.init();
        });
    </script>
}