@using PlataformaRio2c.Infra.Data.FileRepository.Helpers
@using PlataformaRio2C.Domain.Dtos
@using PlataformaRio2C.Domain.Statics
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Common
@model X.PagedList.IPagedList<AttendeeCollaboratorNetworkDto>
@{
    var isModal = ViewBag.IsModal as bool? ?? false;
    var userAccessControlDto = ViewBag.UserAccessControlDto as UserAccessControlDto;
    var hasFullVisibility = userAccessControlDto?.HasAnyCollaboratorType(PlataformaRio2C.Domain.Constants.CollaboratorType.NetworksFullVisibilityArray) == true;
}
<!--begin::List-->
@if (Model?.Any() == true)
{
    <div class="row">
        @foreach (var attendeeCollaboratorNetworkDto in Model)
        {
            var attendeeOrganizationDto = attendeeCollaboratorNetworkDto.AttendeeOrganizationsDtos?.FirstOrDefault();

            <div class="@(!isModal ? "col-sm-6 col-lg-6 col-xl-4" : "col-sm-6")">
                <!--Begin::Portlet-->
                <div class="kt-portlet kt-portlet--height-fluid">
                    <div class="kt-portlet__head kt-portlet__head--noborder">
                        <div class="kt-portlet__head-label">
                            <h3 class="kt-portlet__head-title"></h3>
                        </div>
                    </div>
                    <div class="kt-portlet__body">
                        <!--begin::Widget -->
                        <div class="kt-widget kt-widget--user-profile-2">
                            <div class="kt-widget__head" style="min-height: 120px;">
                                <div class="kt-widget__media">
                                    @if (attendeeCollaboratorNetworkDto?.Collaborator?.HasImage() == true)
                                    {
                                        <img class="kt-widget__img" src="@ImageHelper.GetImageUrl(FileRepositoryPathType.UserImage, attendeeCollaboratorNetworkDto.Collaborator.Uid, attendeeCollaboratorNetworkDto.Collaborator.ImageUploadDate, true)" alt="">
                                    }
                                    else
                                    {
                                        <div class="kt-widget__pic kt-widget__pic--info kt-font-info kt-font-boldest">@(attendeeCollaboratorNetworkDto?.Collaborator?.GetNameAbbreviation())</div>
                                    }
                                </div>
                                <div class="kt-widget__info">
                                    <a href="@Url.Action("Details", "Executives", new { id = attendeeCollaboratorNetworkDto?.Collaborator?.Uid })" class="kt-widget__username" target="_blank">
                                        @(attendeeCollaboratorNetworkDto?.Collaborator?.Badge)
                                    </a><br />
                                    <span class="kt-widget__section">
                                        @(attendeeCollaboratorNetworkDto.GetJobTitleDtoByLanguageCode(ViewBag.UserInterfaceLanguage)?.Value)
                                    </span>
                                </div>
                            </div>
                            <div class="kt-widget__body">
                                <div class="kt-widget__desc text-center mt-3" style="min-height: 60px;">
                                    <h5>@(attendeeOrganizationDto?.Organization?.TradeName)</h5>
                                </div>
                                @if (hasFullVisibility)
                                {
                                    <div class="kt-widget__item">
                                        <div class="kt-widget__contact d-block">
                                            <span class="kt-widget__label">@Labels.Email:</span><br />
                                            <span class="kt-widget__data text-break">@(attendeeCollaboratorNetworkDto.Collaborator.PublicEmail ?? "-")</span>
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="kt-widget__footer">
                                @if (!isModal)
                                {
                                    <a href="@Url.Action("Messages", "Networks", new {id = attendeeCollaboratorNetworkDto.User.Uid, Area = ""})" class="btn btn-label-brand btn-lg btn-upper">@Labels.SendMessage</a>
                                }
                                else
                                {
                                    <a href="#" onclick="return NetworksContacts.sendMessage('@attendeeCollaboratorNetworkDto.User.Uid');" class="btn btn-label-brand btn-lg btn-upper">@Labels.SendMessage</a>
                                }
                            </div>
                        </div>
                        <!--end::Widget -->
                    </div>
                </div>
                <!--End::Portlet-->
            </div>
        }
    </div>
    <!--begin::Pagination-->
    <div class="row">
        <div class="col-xl-12">
            <!--begin:: Components/Pagination/Default-->
            <div class="kt-portlet">
                <div class="kt-portlet__body">
                    <!--begin: Pagination-->
                    <div class="kt-pagination kt-pagination--brand justify-content-center justify-content-sm-between">
                        @Html.PagedListPager(
                            Model,
                            page => Url.Action(
                                "ShowContactsListWidget",
                                "Networks",
                                new {
                                    searchKeywords = ViewBag.SearchKeywords,
                                    collaboratorRoleUid = ViewBag.CollaboratorRoleUid,
                                    collaboratorIndustryUid = ViewBag.CollaboratorIndustryUid,
                                    isModal = ViewBag.IsModal,
                                    page,
                                    pageSize = ViewBag.PageSize
                                }),
                            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                                new PagedListRenderOptions
                                {
                                    DisplayLinkToIndividualPages = true,
                                    MaximumPageNumbersToDisplay = 3,
                                    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                    DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                    DisplayLinkToLastPage = PagedListDisplayMode.Always,
                                    UlElementClasses = new string[] {"kt-pagination__links"},
                                    LiElementClasses = new string[] {""},
                                    PreviousElementClass = "kt-pagination__link--prev",
                                    NextElementClass = "kt-pagination__link--next",
                                    ClassToApplyToFirstListItemInPager = "kt-pagination__link--first",
                                    ClassToApplyToLastListItemInPager = "kt-pagination__link--last kt-font-brand",
                                    ActiveLiElementClass = "kt-pagination__link--active",
                                    PageClasses = new string[] {""},
                                    EllipsesElementClass = ""
                                }
                                , new AjaxOptions { HttpMethod = "GET", OnBegin = "NetworksContactsListWidget.changePage", OnSuccess = "NetworksContactsListWidget.handlePaginationReturn" }))
                        <div class="kt-pagination__toolbar">
                            @Html.DropDownList("PageSizeDropdown", new SelectList(new[] { 1, 6, 15, 30 }, ViewBag.PageSize), null, new { @class = "form-control kt-font-brand", style = "width: 60px;" })
                            @Html.PagedListPager(
                                Model,
                                page => Url.Action(null, new {page}),
                                PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                                    new PagedListRenderOptions
                                    {
                                        ItemSliceAndTotalFormat = Messages.PaginationMessage,
                                        DisplayItemSliceAndTotal = true,
                                        DisplayLinkToIndividualPages = false,
                                        DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                                        DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
                                        DisplayLinkToNextPage = PagedListDisplayMode.Never,
                                        DisplayLinkToLastPage = PagedListDisplayMode.Never,
                                        ContainerDivClasses = new[] {"pagination__desc"},
                                        UlElementClasses = new string[] {"pagination mb-0"},
                                        LiElementClasses = new string[] {"page-item"},
                                        PageClasses = new string[] {"page-link"}
                                    }, null))
                        </div>
                    </div>
                    <!--end: Pagination-->
                </div>
            </div>
            <!--end:: Components/Pagination/Default-->
        </div>
    </div>
    <!--end::Pagination-->
}
else
{
    <div class="kt-portlet">
        <div class="kt-portlet__body">
            <div class="row">
                <div class="col-12 text-center">@string.Format(Messages.NoneEntityAction, Labels.Participant.ToLowerInvariant(), Labels.FoundM)</div>
            </div>
        </div>
    </div>
}
<!--end::List-->