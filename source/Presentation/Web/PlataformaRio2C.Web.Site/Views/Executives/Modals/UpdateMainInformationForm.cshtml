@using PlataformaRio2C.Application.CQRS.Commands
@model CollaboratorBaseCommand
<div class="kt-section">
    <div class="kt-separator kt-separator--border-dashed"></div>
    <h3 class="kt-section__title mb-0">@Labels.PersonalInformation</h3>
    <div class="kt-separator kt-separator--border-dashed"></div>
    <div class="kt-section__content mt-3">
        <div class="form-group row">
            <div class="col-lg-4 text-center">
                @Html.EditorFor(m => m.CropperImage)
            </div>
            <div class="col-lg-8">
                <div class="kt-section">
                    <h3 class="kt-section__title mb-0">Holding » Player</h3>
                    @Html.ValidationMessage("Players", new { @class = "text-danger" })
                    <div class="kt-section__content mt-3">
                        <div id="attendeeorganization-list">
                            @Html.EditorFor(m => m.AttendeeOrganizationBaseCommands)
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <button type="button" class="btn btn-primary" onclick="AttendeeOrganizationsForm.add(); return false;">@Labels.NewM @Labels.Player</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-5">
                @Html.LabelFor(m => m.FirstName, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-7">
                @Html.LabelFor(m => m.LastNames, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
                @Html.TextBoxFor(m => m.LastNames, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.LastNames, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-12">
                @Html.LabelFor(m => m.Badge, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
                @Html.TextBoxFor(m => m.Badge, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Badge, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-12">
                @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                <span class="form-text text-muted">@Messages.EmailInputMessage</span>
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-6">
                @Html.LabelFor(m => m.CellPhone, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
                @Html.TextBoxFor(m => m.CellPhone, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.CellPhone, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.LabelFor(m => m.PhoneNumber, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>
<div class="kt-section pt-4">
    <h3 class="kt-section__title mb-0">@Labels.JobTitles</h3>
    @Html.ValidationMessage("JobTitles", new { @class = "text-danger" })
    <div class="kt-section__content mt-3">
        @Html.EditorFor(m => m.JobTitles, new { id = "vasco" })
    </div>
</div>      
<!-- BEGIN TEMPLATE INSTALLMENT -->
<div id="atendeeorganization-template" style="display: none">
    @Html.EditorFor(m => m.TemplateAttendeeOrganizationBaseCommands)
</div>
<!-- END TEMPLATE INSTALLMENT -->
<script>
    // Templates ----------------------------------------------------------
    var templates = {
        AttendeeOrganization: $("#atendeeorganization-template").html().replace(new RegExp('Template', 'g'), '')
    };
    $("#atendeeorganization-template").remove();
</script>
