@using PlataformaRio2c.Infra.Data.FileRepository.Helpers
@using PlataformaRio2C.Domain.Dtos
@using PlataformaRio2C.Domain.Statics
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Common
@model X.PagedList.IPagedList<MatchAttendeeOrganizationDto>
@{
    var editionDto = ViewBag.EditionDto as EditionDto;
}
@if (Model.TotalItemCount > 0)
{
    <div class="row rio2c-scroll" style="height: 460px;">
        <div class="col-12">
            <div class="row">
                @foreach (var matchAttendeeOrganizationDto in Model)
                {
                    <div class="col-12">
                        <!--Begin::Portlet-->
                        <div class="kt-portlet">
                            @*<div class="kt-portlet__head kt-portlet__head--noborder"></div>*@
                            <div class="kt-portlet__body mt-40">
                                <!--begin::Widget -->
                                <div class="kt-widget kt-widget--user-profile-2" style="flex-direction: row;">
                                    <div class="kt-widget__head">
                                        <div class="kt-widget__media">
                                            @if (matchAttendeeOrganizationDto.Organization.HasImage())
                                            {
                                                <img class="kt-widget__img" src="@ImageHelper.GetImageUrl(FileRepositoryPathType.OrganizationImage, matchAttendeeOrganizationDto.Organization.Uid, matchAttendeeOrganizationDto.Organization.ImageUploadDate, true)" alt="image">
                                            }
                                            else
                                            {
                                                <div class="kt-widget__pic kt-widget__pic--info kt-font-info kt-font-boldest">
                                                    @(matchAttendeeOrganizationDto.Organization.GetTradeNameAbbreviation())
                                                </div>
                                            }
                                        </div>
                                        <div class="kt-widget__info">
                                            <a href="@Url.Action("Details", "Companies", new {id = matchAttendeeOrganizationDto.Organization.Uid})" class="kt-widget__username" target="_blank">
                                                @matchAttendeeOrganizationDto.Organization.TradeName
                                            </a>
                                            <span class="kt-widget__desc">
                                                <a href="@Url.Action("Details", "Companies", new {id = matchAttendeeOrganizationDto.Organization.Uid})" target="_blank">
                                                    <small><i class="flaticon-profile"></i> @Labels.SeeDescription</small>
                                                </a>
                                            </span>
                                            <span class="kt-widget__desc">
                                                @{
                                                    var totalInterestGroupsMatchesCount = matchAttendeeOrganizationDto.GetTotalInterestGroupsMatchesCount();
                                                }
                                                <small>@totalInterestGroupsMatchesCount @((totalInterestGroupsMatchesCount != 1 ? Labels.Matches : Labels.Match).ToLowerInvariant()):</small><br/>
                                                @foreach (var interestGroupsMatch in matchAttendeeOrganizationDto.InterestGroupsMatches.OrderBy(igm => igm.DisplayOrder))
                                                {
                                                    <span class="kt-badge kt-badge--inline kt-badge--info mt-1">@interestGroupsMatch.Name.GetSeparatorTranslation(ViewBag.UserInterfaceLanguage as string, '|')</span>
                                                }
                                            </span>
                                            @if (editionDto?.IsProjectSubmitOpen() == true)
                                            {
                                                <span class="kt-widget__desc">
                                                    <button type="button" class="btn btn-label-info btn-sm btn-upper select-buyer-evaluation-button" onclick="ProjectsBuyerCompanyWidget.selectCompany('@matchAttendeeOrganizationDto.AttendeeOrganization.Uid')" data-attendeeorganizationuid="@matchAttendeeOrganizationDto.AttendeeOrganization.Uid">@Labels.ToSelect</button>
                                                </span>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <!--end::Widget -->
                            </div>
                        </div>
                        <!--End::Portlet-->
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="row mt-10">
        <div class="col-12">
            @Html.PagedListPager(
                Model,
                page => Url.Action(null, new { page }),
                PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                    new PagedListRenderOptions
                    {
                        ItemSliceAndTotalFormat = Messages.PaginationMessage,
                        DisplayItemSliceAndTotal = true,
                        DisplayLinkToIndividualPages = false,
                        DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                        DisplayLinkToPreviousPage = PagedListDisplayMode.Never,
                        DisplayLinkToNextPage = PagedListDisplayMode.Never,
                        DisplayLinkToLastPage = PagedListDisplayMode.Never,
                        ContainerDivClasses = new[] { "kt-pagination__toolbar" },
                        UlElementClasses = new string[] { "pagination list-inline mx-auto justify-content-center" },
                        LiElementClasses = new string[] { "page-item" },
                        PageClasses = new string[] { "page-link" }
                    }, null))
        </div>
        <div class="col-12">
            @Html.PagedListPager(
                Model,
                page => Url.Action("ShowProjectMatchBuyerCompanyWidget", "Projects", new { searchKeywords = ViewBag.SearchKeywords, page }) + ViewBag.ShowProjectMatchBuyerCompanySearch,
                PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                    new PagedListRenderOptions
                    {
                        DisplayLinkToIndividualPages = true,
                        MaximumPageNumbersToDisplay = 3,
                        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                        DisplayLinkToNextPage = PagedListDisplayMode.Always,
                        DisplayLinkToLastPage = PagedListDisplayMode.Always,
                        UlElementClasses = new string[] { "pagination list-inline mx-auto justify-content-center" },
                        LiElementClasses = new string[] { "page-item" },
                        PageClasses = new string[] { "page-link" },
                        EllipsesElementClass = "page-link"
                    }
                    , new AjaxOptions { HttpMethod = "GET", OnBegin = "ProjectsMatchBuyerCompanyWidget.changePage", OnSuccess = "ProjectsMatchBuyerCompanyWidget.handlePaginationReturn" }))
        </div>
    </div>
}
else
{
    <div class="col-12 mt-30 text-center">
        <span>@string.Format(Messages.EntityNotAction, Labels.Player, Labels.FoundM).</span>
    </div>
}