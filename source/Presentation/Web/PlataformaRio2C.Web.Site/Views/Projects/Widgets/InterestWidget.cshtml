@using PlataformaRio2C.Domain.Dtos
@using PlataformaRio2C.Domain.Entities
@model ProjectDto
@{
    var editionDto = ViewBag.EditionDto as EditionDto;
    var userAccessControlDto = ViewBag.UserAccessControlDto as UserAccessControlDto;
    var groupedInterests = ViewBag.GroupedInterests as List<IGrouping<InterestGroup, Interest>>;
    var targetAudiences = ViewBag.TargetAudiences as List<TargetAudience>;
    var isCollaborator = userAccessControlDto?.HasEditionAttendeeOrganization(Model.SellerAttendeeOrganizationDto.AttendeeOrganization.Uid) == true;
    var isProjectSubmissionOpen = editionDto?.IsAudiovisualProjectSubmitOpen() == true;
    var isProjectFinished = Model.Project.IsFinished();
}
<div class="kt-portlet__head">
    <div class="kt-portlet__head-label">
        <h3 class="kt-portlet__head-title">
            @Labels.Interests @Labels.And @Labels.TargetAudience
        </h3>
    </div>
    @if (isCollaborator && isProjectSubmissionOpen && !isProjectFinished)
    {
        <div class="kt-portlet__head-toolbar">
            <div class="kt-portlet__head-actions">
                <button type="button" class="btn btn-clean btn-sm btn-icon btn-icon-md btn-circle" onclick="ProjectsInterestWidget.showUpdateModal();">
                    <i class="flaticon2-edit"></i>
                </button>
            </div>
        </div>
    }
</div>
<div class="kt-portlet__body">
    <div class="kt-widget">
        <div class="kt-widget__bottom">
            @if (groupedInterests?.Any() == true || targetAudiences?.Any() == true)
            {
                if (groupedInterests?.Any() == true)
                {
                    var isFirstGroup = true;
                    <div class="row">
                        @foreach (var interests in groupedInterests)
                        {
                            <div class="col-md-12">
                                <div class="kt-widget4">
                                    <h3 class="kt-heading kt-heading--sm mb-0 @(isFirstGroup ? "mt-0" : string.Empty)">@interests.Key.Name.GetSeparatorTranslation(ViewBag.UserInterfaceLanguage as string, '|')</h3>
                                    @foreach (var interest in interests?.OrderBy(ig => ig.DisplayOrder))
                                    {
                                        var projectInterestDto = Model.GetInterestDtoByInterestUid(interest.Uid);
                                        if (projectInterestDto != null)
                                        {
                                            <span class="kt-badge kt-badge--inline kt-badge--info mt-1">
                                                @interest.Name.GetSeparatorTranslation(ViewBag.UserInterfaceLanguage as string, '|')
                                                @if (interest.HasAdditionalInfo && !string.IsNullOrEmpty(projectInterestDto.ProjectInterest.AdditionalInfo))
                                                {
                                                    @("» " + projectInterestDto.ProjectInterest.AdditionalInfo.GetSeparatorTranslation(ViewBag.UserInterfaceLanguage as string, '|'))
                                                }
                                            </span>
                                        }
                                    }
                                </div>
                            </div>

                            isFirstGroup = false;
                        }
                    </div>
                }
                if (targetAudiences?.Any() == true)
                {
                    <div class="row">
                        <div class="col-md-12">
                            <div class="kt-widget4">
                                <h3 class="kt-heading kt-heading--sm mb-0">@Labels.TargetAudience</h3>
                                @foreach (var targetAudience in targetAudiences.OrderBy(a => a.DisplayOrder))
                                {
                                    var targetAudienceDto = Model.GetTargetAudienceDtoByTargetAudienceUid(targetAudience.Uid);
                                    if (targetAudienceDto != null)
                                    {
                                        <span class="kt-badge kt-badge--inline kt-badge--info mt-1">@targetAudience.Name.GetSeparatorTranslation(ViewBag.UserInterfaceLanguage as string, '|')</span>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <span class="text-center">@string.Format(Messages.EntityNotAction, Labels.Interests, Labels.FoundM)</span>
            }
        </div>
    </div>
</div>