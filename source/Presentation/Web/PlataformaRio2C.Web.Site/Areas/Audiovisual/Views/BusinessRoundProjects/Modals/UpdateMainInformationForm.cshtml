@using PlataformaRio2C.Domain.Dtos
@model PlataformaRio2C.Application.CQRS.Commands.UpdateProjectMainInformation
@{
    var editionDto = ViewBag.EditionDto as EditionDto;
}
<div class="row">
    <div class="col-12 form-group">
        @Html.LabelFor(m => m.ProjectModalityUid, new { @class = "control-label" })
        <select name="ProjectModalityUid" id="ProjectModalityUid" class="form-control enable-select2" @Html.GetUnobtrusiveValidationAttributesFor(m => m.ProjectModalityUid)>
            <option value="">@($"{Labels.Choose}...")</option>
            @if (Model.ProjectModalities != null)
            {
                foreach (var modality in Model.ProjectModalities)
                {
                    <option value="@modality.Uid" @(Model.ProjectModalityUid == modality.Uid ? "selected" : "")>
                        @modality.Name
                    </option>
                }
            }
        </select>
        @Html.ValidationMessageFor(m => m.ProjectModalityUid, "", new { @class = "text-danger" })
    </div>
</div>
<div class="row">
    <div class="col-md-6">
        @Html.EditorFor(m => m.Titles)
    </div>
    <div class="col-md-6">
        @Html.EditorFor(m => m.LogLines)
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        @Html.EditorFor(m => m.Summaries)
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <h5>@Labels.WorkDuration</h5>
    </div>
    <div class="form-group col-md-6">
        @Html.LabelFor(m => m.TotalPlayingTime, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.TotalPlayingTime, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.TotalPlayingTime, "", new { @class = "text-danger" })
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <h5>@Labels.ForSeries</h5>
    </div>
    <div class="form-group col-md-6">
        @Html.LabelFor(m => m.NumberOfEpisodes, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
        @Html.TextBoxFor(m => m.NumberOfEpisodes, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.NumberOfEpisodes, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-6">
        @Html.LabelFor(m => m.EachEpisodePlayingTime, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
        @Html.TextBoxFor(m => m.EachEpisodePlayingTime, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.EachEpisodePlayingTime, "", new { @class = "text-danger" })
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        @Html.EditorFor(m => m.ProductPlans)
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <h5>@Html.Raw(Messages.ProjectBudget)</h5>
    </div>
    <div class="form-group col-md-6">
        @Html.LabelFor(m => m.TotalValueOfProject, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
        @Html.TextBoxFor(m => m.TotalValueOfProject, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.TotalValueOfProject, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-6">
        @Html.LabelFor(m => m.ValuePerEpisode, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
        @Html.TextBoxFor(m => m.ValuePerEpisode, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ValuePerEpisode, "", new { @class = "text-danger" })
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <h5>@Html.Raw(Messages.FundingPlan)</h5>
    </div>
    <div class="form-group col-md-6">
        @Html.LabelFor(m => m.ValueAlreadyRaised, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
        @Html.TextBoxFor(m => m.ValueAlreadyRaised, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ValueAlreadyRaised, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-6">
        @Html.LabelFor(m => m.ValueStillNeeded, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
        @Html.TextBoxFor(m => m.ValueStillNeeded, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ValueStillNeeded, "", new { @class = "text-danger" })
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        @Html.EditorFor(m => m.AdditionalInformations)
    </div>
</div>
<div class="row">
    <div class="col-md-12 mt-20">
        <h4>@Labels.Important</h4>
    </div>
    <div class="form-group col-md-12">
        <h5>
            @Html.Raw(string.Format(Texts.ProjectImportantText, editionDto?.ProjectSubmitEndDate.ToBrazilTimeZone().ToLongDateString()))
        </h5>
    </div>
</div>
