@using PlataformaRio2C.Domain.Dtos
@model AudiovisualProjectSearchViewModel
@{
    ViewBag.Title = Labels.Projects;
    var editionDto = ViewBag.EditionDto as EditionDto;
}
<!--begin:: Quick Stats-->
<div class="row">
    <div class="col-sm-6">
        <!--begin:: Total Count Widget-->
        <div id="AudiovisualProjectsTotalCountWidget" class="kt-portlet kt-portlet--fit kt-portlet--head-noborder" style="min-height: 230px;"></div>
        <!--end:: Total Count Widget-->
    </div>
    <div class="col-sm-6">
        <!--begin:: Edition Count-->
        <div id="AudiovisualProjectsEditionCountWidget" class="kt-portlet kt-portlet--fit kt-portlet--head-noborder" style="min-height: 230px;"></div>
        <!--end:: Edition Count-->
    </div>
</div>
@Html.Partial("Widgets/DataTablewidget")
@section Styles {
    @Styles.Render("~/bundles/css/select2.css")
    @Styles.Render("~/bundles/css/dataTables.css")
}
@section Scripts {
    @Scripts.Render("~/bundles/js/dataTables.js")
    @Scripts.Render("~/bundles/js/chart.js")
    @Scripts.Render("~/bundles/js/bootbox.js")
    @Scripts.Render("~/bundles/js/select2.js")
    @Scripts.Render("~/bundles/js/audiovisual.projects.list.js")
    @Scripts.Render("~/bundles/js/audiovisual.projects.editioncount.widget.js")
    @Scripts.Render("~/bundles/js/audiovisual.projects.delete.js")
<script>
        // Page translations ----------------------------------------------------------------------
        var translations = {
            downloadPdfs: '@Labels.DownloadPdfs',
            confirmDownloadAll: '@Labels.ConfirmDownloadAllProjects',
            confirmDownloadSelected: '@Labels.ConfirmDownloadSelectedProjects',
            pitching: '@Labels.Pitching',

            underEvaluation: '@Labels.UnderEvaluation',
            notCheckedForPitching: '@Labels.NotCheckedForPitching',
            projectAccepted: '@Labels.ProjectAccepted',
            projectRefused: '@Labels.ProjectRefused',
            vote: '@Labels.Vote',
            votes: '@Labels.Votes'
        };

        var isProjectEvaluationClosed = @(Json.Encode(!editionDto.IsAudiovisualCommissionProjectEvaluationOpen()));
        var searchKeywords = '@ViewBag.SearchKeywords';
        var interestUid = '@ViewBag.InterestUid';
        var evaluationStatusUid = '@ViewBag.EvaluationStatusUid';
        var showPitchings = @(Json.Encode(ViewBag.ShowPitchings));

        // Pagination -----------------------------------------------------------------------------
        var initialPage = @(ViewBag.Page?.ToString() ?? "null");
        var initialPageSize = @(ViewBag.PageSize?.ToString() ?? "null");

        jQuery(document).ready(function () {
            AudiovisualProjectsDataTableWidget.init();
            AudiovisualProjectsTotalCountWidget.init();
            AudiovisualProjectsEditionCountWidget.init();
        });
</script>
}