@using PlataformaRio2c.Infra.Data.FileRepository.Helpers
@using PlataformaRio2C.Domain.Constants
@using PlataformaRio2C.Domain.Dtos
@using PlataformaRio2C.Domain.Statics
@model List<AttendeeCollaboratorDto>
@{
    var startDate = ViewBag.StartDate as DateTime?;
    var endDate = ViewBag.EndDate as DateTime?;
}
<div class="kt-widget4">
    @if (Model != null && Model.Any(ac => ac.ConferenceDtos != null && ac.ConferenceDtos.Count() > 0))
    {
        <table class="table table-sm table-head-bg-brand table-body-scroll table-striped">
            <thead class="thead-inverse">
                <tr>
                    <th class="col-md-5">@Labels.Speaker</th>
                    <th class="col-md-4">@Labels.Title</th>
                    <th class="text-center">@Labels.StartDate</th>
                    <th class="text-center">@Labels.EndDate</th>
                </tr>
            </thead>
            <tbody class="rio2c-scroll" style="height: 150px;">
                @foreach (var attendeeCollaboratorDto in Model.Where(ac => ac.ConferenceDtos != null && ac.ConferenceDtos.Count() > 0))
                {
                    foreach (var conferenceDto in attendeeCollaboratorDto.ConferenceDtos)
                    {
                        <tr>
                            <td class="col-md-5">
                                <a href="@Url.Action("Details", "Speakers", new { Area = "", id = attendeeCollaboratorDto?.Collaborator.Uid })" target="_blank">
                                    @attendeeCollaboratorDto.Collaborator.GetFullName()
                                </a>
                                <div class="row col-md-12">
                                    <span class="kt-badge kt-badge--inline kt-badge--info">
                                        @(attendeeCollaboratorDto.AttendeeOrganizationsDtos.FirstOrDefault().Organization.Name)
                                    </span>
                                </div>
                            </td>
                            <td class="col-md-4">
                                <a href="@Url.Action("Details", "Conferences", new { Area = "", id = conferenceDto.Conference.Uid })" target="_blank">
                                    @(conferenceDto.GetConferenceTitleDtoByLanguageCode(ViewBag.UserInterfaceLanguage)?.ConferenceTitle?.Value)
                                </a>
                            </td>
                            <td class="text-center @(startDate.HasValue && endDate.HasValue && (conferenceDto.Conference.StartDate < startDate.Value || conferenceDto.Conference.StartDate > endDate.Value) ? "kt-font-danger" : string.Empty)">
                                @(conferenceDto.Conference.StartDate.ToBrazilTimeZone().ToStringHourMinute())
                            </td>
                            <td class="text-center @(startDate.HasValue && endDate.HasValue && (conferenceDto.Conference.EndDate < startDate.Value || conferenceDto.Conference.EndDate > endDate.Value) ? "kt-font-danger" : string.Empty)">
                                @(conferenceDto.Conference.EndDate.ToBrazilTimeZone().ToStringHourMinute())
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="row mt-3">
            <div class="col-12 text-center">
                <span class="text-center">@string.Format(Messages.EntityNotAction, Labels.Speakers, Labels.FoundMP)</span>
            </div>
        </div>
    }
</div>
