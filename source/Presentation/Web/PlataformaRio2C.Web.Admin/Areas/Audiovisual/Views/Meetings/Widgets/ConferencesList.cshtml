@using PlataformaRio2c.Infra.Data.FileRepository.Helpers
@using PlataformaRio2C.Domain.Constants
@using PlataformaRio2C.Domain.Dtos
@using PlataformaRio2C.Domain.Statics
@model List<AttendeeCollaboratorDto>
@{
    var startDate = ViewBag.StartDate as DateTime?;
    var endDate = ViewBag.EndDate as DateTime?;
}
<div class="row">
    <div class="col-md-12">
        <div class="kt-widget4">
            @if (Model != null && Model.Any(ac => ac.ConferenceDtos != null && ac.ConferenceDtos.Count() > 0))
            {
                <div class="col-12">
                    <table class="table table-sm table-head-bg-brand table-body-scroll">
                        <thead class="thead-inverse">
                            <tr>
                                <th>@Labels.Speaker</th>
                                <th>@Labels.Title</th>
                                <th class="text-center">@Labels.StartDate</th>
                                <th class="text-center">@Labels.EndDate</th>
                            </tr>
                        </thead>
                        <tbody class="rio2c-scroll" style="height: 130px;">
                            @foreach (var attendeeCollaboratorDto in Model.Where(ac => ac.ConferenceDtos != null && ac.ConferenceDtos.Count() > 0))
                            {
                                foreach (var conferenceDto in attendeeCollaboratorDto.ConferenceDtos)
                                {
                                    <tr>
                                        <td>
                                            <a href="@Url.Action("Details", "Speakers", new { Area = "", id = attendeeCollaboratorDto?.Collaborator.Uid })" target="_blank">
                                                @attendeeCollaboratorDto.Collaborator.GetFullName()
                                            </a>
                                        </td>
                                        <td>
                                            <a href="@Url.Action("Details", "Conferences", new { Area = "", id = conferenceDto.Conference.Uid })" target="_blank">
                                                @(conferenceDto.GetConferenceTitleDtoByLanguageCode(ViewBag.UserInterfaceLanguage)?.ConferenceTitle?.Value)
                                            </a>
                                        </td>
                                        <td class="text-center @(startDate.HasValue && endDate.HasValue && (conferenceDto.Conference.StartDate < startDate.Value || conferenceDto.Conference.StartDate > endDate.Value) ? "kt-font-danger" : string.Empty)">
                                            @(conferenceDto.Conference.StartDate.ToUserTimeZone().ToShortDateString()) @(conferenceDto.Conference.StartDate.ToUserTimeZone().ToShortTimeString())
                                        </td>
                                        <td class="text-center @(startDate.HasValue && endDate.HasValue && (conferenceDto.Conference.EndDate < startDate.Value || conferenceDto.Conference.EndDate > endDate.Value) ? "kt-font-danger" : string.Empty)">
                                            @(conferenceDto.Conference.EndDate.ToUserTimeZone().ToShortDateString()) @(conferenceDto.Conference.EndDate.ToUserTimeZone().ToShortTimeString())
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="row mt-3">
                    <div class="col-12 text-center">
                        <span class="text-center">@string.Format(Messages.EntityNotAction, Labels.Speakers, Labels.FoundMP)</span>
                    </div>
                </div>
            }
        </div>
    </div>
</div>