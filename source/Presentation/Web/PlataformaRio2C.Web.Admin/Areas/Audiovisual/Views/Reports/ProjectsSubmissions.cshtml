@using PlataformaRio2C.Domain.Dtos
@using Entities = PlataformaRio2C.Domain.Entities
@model ReportsAudiovisualSearchViewModel
@{
    ViewBag.Title = Labels.AudiovisualSubscriptionProjectReport;
    var genreInterests = ViewBag.GenreInterests as List<InterestDto>;
    var targetAudiences = ViewBag.TargetAudience as List<Entities.TargetAudience>;
}
<div class="kt-portlet kt-portlet--mobile">
    <div class="kt-portlet__head kt-portlet__head--lg">
        <div class="kt-portlet__head-label">
            <span class="kt-portlet__head-icon">
                <i class="kt-font-brand flaticon2-line-chart"></i>
            </span>
            <h3 class="kt-portlet__head-title">
                @Labels.AudiovisualSubscriptionProjectReport
            </h3>
        </div>
        <div class="kt-portlet__head-toolbar">
            <div class="kt-portlet__head-wrapper">
                <div class="kt-portlet__head-actions">
                    <button type="button" class="btn btn-primary" onclick="AudiovisualReportsProjectsSubmissionsWidget.exportToExcel();"><i class="fa"></i>@Labels.ExportToExcel</button>
                </div>
            </div>
        </div>
    </div>
    <div class="kt-portlet__body">
        <div class="row">
            <div class="col-md-5 mt-2">
                @Html.Hidden("Page", Model.Page as int? ?? 1)
                @Html.Hidden("PageSize", Model.PageSize as int? ?? 10)
                @Html.TextBox("SearchKeywords", null, new { @class = "form-control mr-1", type = "search", placeholder = Labels.Search })
            </div>
            <div class="col-md-5 mt-2">
                <div class="row">
                    <div class="col-5">
                        @Html.TextBox("StartDate", Model.StartDate?.ToShortDateString(), new { @class = "form-control enable-datepicker", @readonly = "readonly", data_date_start_date = "01/01/2019", data_date_end_date = DateTime.Today, placeholder = Labels.StartDate })
                        @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-2 mt-2 text-center">@Labels.To</div>
                    <div class="col-5">
                        @Html.TextBox("EndDate", Model.EndDate?.ToShortDateString(), new { @class = "form-control enable-datepicker", @readonly = "readonly", data_date_start_date = "01/01/2019", data_date_end_date = DateTime.Today, placeholder = Labels.EndDate })
                        @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-1 mt-2">
                <button type="button" class="btn btn-primary btn-icon" onclick="AudiovisualReportsProjectsSubmissionsWidget.search();"><i class="fa fa-search"></i></button>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 mt-2">
                <select name="InterestUid" id="InterestUid" class="form-control" multiple="multiple">
                    @foreach (var interestDto in genreInterests)
                    {
                        <option value="@interestDto.Interest.Uid" @(Model.InterestUids?.Split(',').ToList().Contains(interestDto.Interest.Uid.ToString()) == true ? "selected" : string.Empty)>
                            @interestDto.Interest.Name.GetSeparatorTranslation(ViewBag.UserInterfaceLanguage as string, '|')
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-4 mt-2">
                <select name="TargetAudienceUid" id="TargetAudienceUid" class="form-control" multiple="multiple">
                    @foreach (var targetAudience in targetAudiences)
                    {
                        <option value="@targetAudience.Uid" @(Model.TargetAudienceUids?.Split(',').ToList().Contains(targetAudience.Uid.ToString()) == true ? "selected" : string.Empty)>
                            @targetAudience.Name.GetSeparatorTranslation(ViewBag.UserInterfaceLanguage as string, '|')
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-4 mt-2">
                <div class="kt-checkbox-list">
                    <label class="kt-checkbox mt-2">
                        @Html.CheckBox("IsPitching", false, new { @class = "enable-datatable-reload" }) @Labels.ProjectsForPitching?
                        <span></span>
                    </label>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="kt-portlet kt-portlet--height-fluid">
            <div class="kt-portlet__body">
                <div id="AudiovisualReportsProjectsSubmissionsWidget"></div>
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/bundles/css/select2.css")
    @Styles.Render("~/bundles/css/bootstrap-datepicker.css")
}
@section Scripts {
    @Scripts.Render("~/bundles/js/bootbox.js")
    @Scripts.Render("~/bundles/js/select2.js")
    @Scripts.Render("~/bundles/js/bootstrap-datepicker.js")
    @Scripts.Render("~/bundles/js/audiovisual.reports.projectssubmissions.widget.js")
    <script>
         var translations = {
            selectPlaceholder: '@Labels.SelectAMEntity',
            genre: '@Html.Raw(Labels.Genre.ToLowerInvariant())',
            targetAudience: '@Html.Raw(Labels.TargetAudience.ToLowerInvariant())',
            startDate: '@Html.Raw(Labels.StartDate.ToLowerInvariant())',
            endDate: '@Html.Raw(Labels.EndDate.ToLowerInvariant())',
        };

        jQuery(document).ready(function () {
            AudiovisualReportsProjectsSubmissionsWidget.init();
        });
    </script>
}