@model PlataformaRio2C.Application.CQRS.Commands.UpdateOrganizationMainInformation
@if (Model.Country != null)
{
    <select name="CountryUid" id="CountryUid" class="d-none">
        <option value="@(Model.Country.Uid)" data-country-code="@(Model.Country.Code)" data-companynumber-required="@(Model.Country.IsCompanyNumberRequired)" data-companynumber-mask="@(Model.Country.CompanyNumberMask)" data-zipcode-mask="@(Model.Country.ZipCodeMask)" data-phonenumber-mask="@(Model.Country.PhoneNumberMask)" data-mobile-mask="@(Model.Country.MobileMask)" selected>@(Model.Country.Name)</option>
    </select>
}
<div class="row">
    <div class="form-group col-lg-4 text-center">
        @Html.EditorFor(m => m.CropperImage)
    </div>
    <div class="col-lg-8">
        <div class="form-group row">
            <div class="col-md-12">
                @Html.LabelFor(m => m.HoldingUid, new { @class = "control-label" })
                @Html.DropDownList("HoldingUid", new SelectList(Model.HoldingBaseDtos, "Uid", "Name", Model.HoldingUid), $"{Labels.Select}...", new { @class = "form-control enable-select2" })
                @Html.ValidationMessageFor(m => m.HoldingUid, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-6">
                @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.HiddenFor(m => m.IsCompanyNumberRequired)
                @Html.LabelFor(m => m.Document, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Document, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Document, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-12">
                @Html.LabelFor(m => m.CompanyName, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
                @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-12">
                @Html.LabelFor(m => m.TradeName, new { @class = "control-label" }) <span class="form-optional-input text-muted">@Labels.Optional</span>
                @Html.TextBoxFor(m => m.TradeName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.TradeName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            
        </div>
    </div>
</div>
<div class="kt-section mt-50 mb-0">
    <h3 class="kt-heading kt-heading--md">@Labels.VirtualMeetingConfiguration</h3>
    <div class="kt-section__content">
        <div class="row">
            <div class="col-sm-6">
                @Html.HiddenFor(m => m.IsVirtualMeetingRequired)
                <div class="row">
                    <div class="col-12">
                        @Html.LabelFor(m => m.IsVirtualMeeting, new { @class = "control-label" }) ?
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-12">
                        <div class="kt-radio-list ml-3" data-id="IsVirtualMeeting">
                            <label class="kt-radio">
                                @Html.RadioButtonFor(m => m.IsVirtualMeeting, true) @Labels.Yes
                                <span></span>
                            </label>
                            <label class="kt-radio">
                                @Html.RadioButtonFor(m => m.IsVirtualMeeting, false) @Labels.No
                                <span></span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="kt-section mt-30">
    <h3 class="kt-heading kt-heading--md">@Labels.CompanyResume</h3>
    @Html.ValidationMessage("Descriptions", new { @class = "text-danger" })
    <div class="kt-section__content mt-3">
        @Html.EditorFor(m => m.Descriptions)
    </div>
</div>
<div class="kt-section">
    <h3 class="kt-heading kt-heading--md">@Labels.ApiConfigurations</h3>
    <div class="kt-section__content">
        <div class="row">
            <div class="col-sm-6">
                <div class="row">
                    <div class="col-12">
                        @Html.Label($"{string.Format(Labels.DisplayOnSiteEdition, ViewBag.EditionDto.UrlCode)}", new { @class = "control-label" })
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-12">
                        <span class="kt-switch kt-switch--icon">
                            <label>
                                @Html.CheckBoxFor(m => m.IsApiDisplayEnabled, true)
                                <span></span>
                            </label>
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="row">
                    <div class="col-12">
                        @Html.Label(Labels.HighlightPosition, new { @class = "control-label" })
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-12">
                        @Html.DropDownListFor(m => m.ApiHighlightPosition, new SelectList(Model.ApiHighlightPositions, Model.ApiHighlightPosition), Labels.Select + "...", new { @class = "form-control enable-select2" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>