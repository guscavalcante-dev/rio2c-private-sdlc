@model AddressAppViewModel

@if (Model != null)
{
    <div class="form-group">
        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label required" })

        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label required" })

        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label required" })

        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label required" })

        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AddressValue, htmlAttributes: new { @class = "control-label required" })

        @Html.EditorFor(model => model.AddressValue, new { htmlAttributes = new { @class = "form-control", maxlength = AddressAppViewModel.AddressValueMaxLength } })
        @Html.ValidationMessageFor(model => model.AddressValue, "", new { @class = "text-danger" })
    </div>
}