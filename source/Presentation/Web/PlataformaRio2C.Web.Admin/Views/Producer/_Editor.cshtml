@model ProducerEditAppViewModel

@{
    int index = 0;
}

@Html.AntiForgeryToken()
@Html.HiddenFor(m => m.Uid)

<div>
    <aside class="profile-nav col-lg-4">

        <div class="user-heading round">
            @Html.EditorFor(m => m.ImageUpload, new { Image = Model.Image })

            <div class="fileinput-message">
                <span class="label label-danger">@Labels.Warning</span>
                <span class="text">@Html.Raw(Labels.InfoImagePlayer)</span>
            </div>

            <div class="image-upload-error-message">@Html.ValidationMessagesFor(model => model.ImageUpload, new { @class = "text-danger" })</div>
        </div>
    </aside>


    <aside class="profile-info col-lg-8">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

      

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label required" })

            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CNPJ, htmlAttributes: new { @class = "control-label required" })

            @Html.EditorFor(model => model.CNPJ, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CNPJ, "", new { @class = "text-danger" })

        </div>

       

        <div class="form-group">
            @Html.LabelFor(model => model.TradeName, htmlAttributes: new { @class = "control-label required" })

            @Html.EditorFor(model => model.TradeName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TradeName, "", new { @class = "text-danger" })

        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label required" })

            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SocialMedia, htmlAttributes: new { @class = "control-label required" })

            @Html.EditorFor(model => model.SocialMedia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SocialMedia, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label required" })

            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>

        <hr />

        @Html.EditorFor(m => m.Address)

        <hr />

        @Html.ValidationMessage("Descriptions", htmlAttributes: new { @class = "text-danger" })
        @if (Model.Descriptions != null && Model.Descriptions.Any())
        {
            for (int i = 0; i < Model.LanguagesOptions.Count(); i++)
            {
                var code = Model.Descriptions.ToList().FirstOrDefault(e => e.LanguageCode == Model.LanguagesOptions.ElementAt(i).Code);
                var codeValue = code != null ? code.Value : null;
                var languageCodeValue = code != null ? code.LanguageCode : null;

                <div class="form-group">
                    <label class="control-label">Descrição @Model.LanguagesOptions.ElementAt(i).Name</label>

                    <textarea name="Descriptions[@i].Value" class="form-control ckeditor-rio2c">@codeValue</textarea>
                    <input type="hidden" value="@languageCodeValue" name="Descriptions[@i].LanguageCode" class="form-control" />

                </div>
            }
        }
        else
        {
            for (int i = 0; i < Model.LanguagesOptions.Count(); i++)
            {
                var codeValue = Model.LanguagesOptions.ElementAt(i).Code;
                <div class="form-group">
                    <label class="control-label">Descrição @Model.LanguagesOptions.ElementAt(i).Name</label>

                    <textarea name="Descriptions[@i].Value" class="form-control ckeditor-rio2c"></textarea>
                    <input type="hidden" value="@codeValue" name="Descriptions[@i].LanguageCode" class="form-control" />

                </div>
            }
        }


        @Html.ValidationMessages("Activitys", htmlAttributes: new { @class = "text-danger" })
        <div class="panel panel-primary">
            <div class="panel-heading" role="tab">
                <h4 class="panel-title">

                    @Html.LabelFor(model => model.Activitys, htmlAttributes: new { @class = "control-label required" })
                </h4>
            </div>
            <div class="panel-body bio-graph-info">
                @foreach (var interests in Model.Activitys)
                {
                    <input name="Activitys[@index].ProducerId" type="hidden" value="@interests.ProducerId" />
                    <input name="Activitys[@index].ActivityId" type="hidden" value="@interests.ActivityId" />
                    <input name="Activitys[@index].ActivityName" type="hidden" value="@interests.ActivityName" />
                                        <div class="checkboxes row-fluid">
                                            <label class="col-sm-6" style="font-weight: bold;">
                                                @Html.CheckBoxFor(m => interests.Selected, new { Name = "Activitys[" + index + "].Selected" }) @interests.ActivityName

                                            </label>
                                        </div>

                    {
                        index++;
                    }
                }
                @{
                    index = 0;
                }

            </div>
        </div>


        @Html.ValidationMessages("TargetAudience", htmlAttributes: new { @class = "text-danger" })
        <div class="panel panel-primary">
            <div class="panel-heading" role="tab">
                <h4 class="panel-title">

                    @Html.LabelFor(model => model.TargetAudience, htmlAttributes: new { @class = "control-label required" })

                </h4>
            </div>
            <div class="panel-body bio-graph-info">
                @foreach (var interests in Model.TargetAudience)
                {
                    <input name="TargetAudience[@index].ProducerId" type="hidden" value="@interests.ProducerId" />
                    <input name="TargetAudience[@index].TargetAudienceId" type="hidden" value="@interests.TargetAudienceId" />
                    <input name="TargetAudience[@index].TargetAudienceName" type="hidden" value="@interests.TargetAudienceName" />
                                        <div class="checkboxes row-fluid">
                                            <label class="col-sm-6" style="font-weight: bold;">
                                                @Html.CheckBoxFor(m => interests.Selected, new { Name = "TargetAudience[" + index + "].Selected" }) @interests.TargetAudienceName
                                                @*<input name="Interests[@i].Selected" type="checkbox" value="true" />@Model.Interests.ElementAt(i).InterestName*@
                                            </label>
                                        </div>

                    {
                        index++;
                    }
                }
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Salvar" class="btn btn-default pull-right" />
            </div>
        </div>
    </aside>
</div>